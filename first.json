{
  "name": "AI Manuscript Analyzer for BookLeaf Publishing",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "13q1UFbvh-Yit80a31CLG_TwTuRCc4fJ7",
          "mode": "list",
          "cachedResultName": "Manuscript Submissions",
          "cachedResultUrl": "https://drive.google.com/drive/folders/13q1UFbvh-Yit80a31CLG_TwTuRCc4fJ7"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "fc6a9222-d99e-43ca-bc69-c7b911aa66f1",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -1984,
        96
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "YZBdnlyRJ9EnqvXT",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "8478fff2-06e1-42c9-a8e9-f5c8e8c86e42",
      "name": "Download Manuscript",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1760,
        96
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "YZBdnlyRJ9EnqvXT",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "59be55a5-e51d-4366-abff-6aebe361f5bb",
      "name": "Extract PDF Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -1536,
        96
      ]
    },
    {
      "parameters": {
        "jsCode": "// Clean and prepare manuscript text\nfor (const item of $input.all()) {\n  // Get the text from the previous node's \"text\" field\n  let text = item.json.text || '';\n\n  // --- Your cleaning rules are good ---\n  // Remove page numbers (common patterns)\n  text = text.replace(/(\\s*Page \\d+\\s*)/g, '\\n');\n\n  // Remove excessive whitespace\n  text = text.replace(/[ \\t]{2,}/g, ' ');\n  text = text.replace(/\\n{3,}/g, '\\n\\n');\n\n  // Remove headers/footers (common patterns)\n  text = text.replace(/Type\\s*Chapter\\s*\\d+/gi, '');\n  \n  // Add the cleaned text to a new field called \"cleanedText\"\n  item.json.cleanedText = text;\n}\n\n// Return the data so the next node can use it\nreturn $input.all();"
      },
      "id": "7c439f15-c06d-47ac-b989-ac98cb0f7ad6",
      "name": "Clean Text",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1312,
        96
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "badbb668-a32a-48bf-b78c-68fdae435fb1",
              "leftValue": "={{ $json.summary }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "febacf9f-f697-4e28-aa92-13029739a3bb",
      "name": "Validate AI Response",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -512,
        96
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1Z1wbQltzFwqbIby_VAd7Nw57IRZntMO415ACmXzY7_M",
          "mode": "list",
          "cachedResultName": "Manuscript Analysis Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Z1wbQltzFwqbIby_VAd7Nw57IRZntMO415ACmXzY7_M/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Z1wbQltzFwqbIby_VAd7Nw57IRZntMO415ACmXzY7_M/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Summary": "={{ $json.summary }}",
            "Genre": "={{ $json.genre }}",
            "Target Audience": "={{ $json.targetAudience }}",
            "Publishability Score": "={{ $json.publishabilityScore }}",
            "Recommendation": "={{ $json.recommendation }}"
          },
          "matchingColumns": [
            "Publishability Score"
          ],
          "schema": [
            {
              "id": "Summary",
              "displayName": "Summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Genre",
              "displayName": "Genre",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Target Audience",
              "displayName": "Target Audience",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Publishability Score",
              "displayName": "Publishability Score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Recommendation",
              "displayName": "Recommendation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "0135661f-382b-4887-a12d-c7609652f307",
      "name": "Log to Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -64,
        96
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "6A1M7fbbWjEsHMDC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "67c3f987-6196-413a-b9f1-8d962e9b7e03",
              "leftValue": "={{ $json['Publishability Score'] }}",
              "rightValue": 7,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f0df082e-c060-4f9c-a725-219bac6eab3e",
      "name": "Check Score >= 7",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        160,
        96
      ]
    },
    {
      "parameters": {
        "jsCode": "// Handle validation error - create minimal data structure\nfor (const item of $input.all()) {\n  const cleanTextData = $('Clean Text').item.json;\n  \n  item.json = {\n    fileName: cleanTextData.originalFileName,\n    fileId: cleanTextData.fileId,\n    fileLink: cleanTextData.fileWebViewLink,\n    submissionDate: new Date().toISOString().split('T')[0],\n    submissionTime: new Date().toISOString(),\n    error: 'AI response validation failed',\n    status: 'Validation Error',\n    publishabilityScore: 0,\n    recommendation: 'Error - Manual Review Required',\n    summary: 'AI analysis failed',\n    genre: 'Unknown',\n    targetAudience: 'Unknown',\n    titleSuggestions: ['N/A', 'N/A', 'N/A'],\n    justification: 'AI response was invalid or incomplete. Manual review required.'\n  };\n}\n\nreturn $input.all();"
      },
      "id": "33f62511-cb37-43ae-b2e3-042846fad239",
      "name": "Handle Validation Error",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -288,
        176
      ]
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.0-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.0-flash"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an expert literary agent analyzing book manuscripts. Analyze the following manuscript and return ONLY a valid JSON object with no additional text, no markdown formatting, no code blocks, and no explanations.\n\nManuscript:\n{{ $json.cleanedText }}\n\nReturn EXACTLY this JSON structure with no modifications:\n{\n  \"summary\": \"A concise one-paragraph summary of the manuscript\",\n  \"genre\": \"Primary genre (e.g., Sci-Fi, Romance, Self-Help, Mystery, Thriller, Fantasy)\",\n  \"targetAudience\": \"Description of ideal reader demographic and age group\",\n  \"titleSuggestions\": [\"Alternative title 1\", \"Alternative title 2\", \"Alternative title 3\"],\n  \"publishabilityScore\": 7,\n  \"recommendation\": \"Accept\",\n  \"justification\": \"Brief reason for recommendation based on market potential, writing quality, and originality\"\n}\n\nIMPORTANT: Return ONLY the JSON object. Do not include any text before or after the JSON."
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -1088,
        96
      ],
      "id": "962039f6-5186-4f31-b0ba-180b45396991",
      "name": "Message a model",
      "credentials": {
        "googlePalmApi": {
          "id": "yeMXARKAQW26fhgu",
          "name": "My Gemini API Key"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get the text output from the Gemini node\nconst aiResponseText =$input.first().json.content.parts[0].text ;\n\ntry {\n  // Try to parse the text into a real JSON object\n  const parsedJson = JSON.parse(aiResponseText);\n  \n  // If successful, return the new, clean JSON object\n  return parsedJson;\n\n} catch (error) {\n  // If it fails, return an error message\n  return { error: \"Failed to parse JSON from AI response.\" };\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -736,
        96
      ],
      "id": "6572c621-fe5e-4df5-a064-c9d750b47f44",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "sendTo": "kashyapsameer731@gmail.com",
        "subject": "=High-Potential Manuscript (Score: {{  $json['Publishability Score']}}/10) - {{ $('Validate AI Response').item.json.titleSuggestions[0] }}",
        "message": "=<h3>New High-Potential Manuscript for Review</h3>\n<p>The automated screening system has identified a new manuscript that meets the criteria for editorial review.</p>\n<hr>\n<p><strong>Title:</strong> </p>{{ $('Validate AI Response').item.json.titleSuggestions[0] }}\n<p><strong>Publishability Score:</strong>{{ $('Validate AI Response').item.json.publishabilityScore }} / 10</p>\n<p><strong>Recommendation:</strong>{{ $json.Recommendation }} </p>\n<hr>\n<h4>AI-Generated Analysis:</h4>\n<p><strong>Summary:</strong><br>{{ $json.Summary }}</p>\n<p><strong>Genre:</strong> {{ $json.Genre }}</p>\n<p><strong>Target Audience:</strong> {{ $json['Target Audience'] }}</p>\n<p><strong>Justification:</strong><br>{{ $('Validate AI Response').item.json.justification }}</p>\n<hr>\n<p>You can view the original manuscript file here:</br>\n<a href=\"https://drive.google.com/file/d/{{ $('Google Drive Trigger').item.json.id }}\">View Manuscript in Google Drive</a></p>",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        384,
        0
      ],
      "id": "188f23b7-51a5-4f2d-8552-94bc116efd28",
      "name": "Send a message",
      "webhookId": "469f298e-4305-4612-bd47-39275d2f13d7",
      "credentials": {
        "gmailOAuth2": {
          "id": "rFWQFS6fJAZEVy4t",
          "name": "Gmail account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Download Manuscript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Manuscript": {
      "main": [
        [
          {
            "node": "Extract PDF Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PDF Text": {
      "main": [
        [
          {
            "node": "Clean Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean Text": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate AI Response": {
      "main": [
        [
          {
            "node": "Log to Google Sheets",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Handle Validation Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Handle Validation Error": {
      "main": [
        [
          {
            "node": "Log to Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log to Google Sheets": {
      "main": [
        [
          {
            "node": "Check Score >= 7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Score >= 7": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Validate AI Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "91a4f17a-7ed1-45a9-a61f-3ff2f8cbbc06",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f01af1f69db79f8ad08a012f71632fab7dd82f0c9e7db5c1d1b362f875b58b3e"
  },
  "id": "n7OJ1c9VTwjsXZcg",
  "tags": []
}